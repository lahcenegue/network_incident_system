# Generated by Django 5.2.6 on 2025-09-22 10:00

import django.db.models.deletion
import incidents.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text='Configuration key identifier', max_length=100, unique=True)),
                ('value', models.TextField(help_text='Configuration value (JSON for complex data)')),
                ('description', models.CharField(help_text='Human-readable description of this setting', max_length=255)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this configuration is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'System Configuration',
                'verbose_name_plural': 'System Configurations',
                'ordering': ['key'],
            },
        ),
        migrations.CreateModel(
            name='BackboneInternetNetworkIncident',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_time_incident', models.DateTimeField(help_text='When the incident occurred', verbose_name='Date and time of INCIDENT')),
                ('date_time_recovery', models.DateTimeField(blank=True, help_text='When the incident was resolved (leave empty for active incidents)', null=True, verbose_name='Date and time of RECOVERY')),
                ('duration_minutes', models.IntegerField(blank=True, help_text='Duration in minutes (auto-calculated)', null=True)),
                ('cause', models.CharField(blank=True, help_text='Root cause of the incident', max_length=100, null=True)),
                ('cause_other', models.CharField(blank=True, help_text="Other cause description (if cause is 'Other')", max_length=200, null=True)),
                ('origin', models.CharField(blank=True, help_text='Origin/source of the incident', max_length=100, null=True)),
                ('origin_other', models.CharField(blank=True, help_text="Other origin description (if origin is 'Other')", max_length=200, null=True)),
                ('impact_comment', models.TextField(blank=True, help_text='Detailed description of impact and comments', null=True, verbose_name='IMPACT / COMMENT')),
                ('is_resolved', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('correction_required', models.BooleanField(default=False)),
                ('correction_note', models.TextField(blank=True, help_text='Note explaining why correction is needed (for admin review)', null=True)),
                ('interconnect_type', models.CharField(help_text='Select interconnect type from admin-configured list', max_length=100, verbose_name='INTERCONNECT TYPE')),
                ('platform_igw', models.CharField(help_text='Select platform or IGW from admin-configured list', max_length=100, verbose_name='PLATFORM/IGW')),
                ('link_label', models.CharField(help_text='Link name or label identification', max_length=200, verbose_name='LINK LABEL')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='backbone_incidents_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='backbone_incidents_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Backbone Internet Network Incident',
                'verbose_name_plural': 'Backbone Internet Network Incidents',
                'ordering': ['-date_time_incident'],
            },
        ),
        migrations.CreateModel(
            name='CoreNetworkIncident',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_time_incident', models.DateTimeField(help_text='When the incident occurred', verbose_name='Date and time of INCIDENT')),
                ('date_time_recovery', models.DateTimeField(blank=True, help_text='When the incident was resolved (leave empty for active incidents)', null=True, verbose_name='Date and time of RECOVERY')),
                ('duration_minutes', models.IntegerField(blank=True, help_text='Duration in minutes (auto-calculated)', null=True)),
                ('cause', models.CharField(blank=True, help_text='Root cause of the incident', max_length=100, null=True)),
                ('cause_other', models.CharField(blank=True, help_text="Other cause description (if cause is 'Other')", max_length=200, null=True)),
                ('origin', models.CharField(blank=True, help_text='Origin/source of the incident', max_length=100, null=True)),
                ('origin_other', models.CharField(blank=True, help_text="Other origin description (if origin is 'Other')", max_length=200, null=True)),
                ('impact_comment', models.TextField(blank=True, help_text='Detailed description of impact and comments', null=True, verbose_name='IMPACT / COMMENT')),
                ('is_resolved', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('correction_required', models.BooleanField(default=False)),
                ('correction_note', models.TextField(blank=True, help_text='Note explaining why correction is needed (for admin review)', null=True)),
                ('platform', models.CharField(help_text='Select platform from admin-configured list', max_length=100, verbose_name='PLATFORM')),
                ('region_node', models.CharField(help_text='Select region or node from admin-configured list', max_length=100, verbose_name='REGION / NODE')),
                ('site', models.CharField(blank=True, help_text='Site identification (optional)', max_length=100, null=True, verbose_name='SITE')),
                ('dot_extremity_a', models.CharField(blank=True, help_text='DOT state for extremity A', max_length=50, null=True, verbose_name='DOT EXTREMITY(A)')),
                ('extremity_a', models.CharField(blank=True, help_text='Location description for extremity A', max_length=200, null=True, verbose_name='EXTREMITY(A)')),
                ('dot_extremity_b', models.CharField(blank=True, help_text='DOT state for extremity B', max_length=50, null=True, verbose_name='DOT EXTREMITY(B)')),
                ('extremity_b', models.CharField(blank=True, help_text='Location description for extremity B', max_length=200, null=True, verbose_name='EXTREMITY(B)')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_incidents_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_incidents_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Core Network Incident',
                'verbose_name_plural': 'Core Network Incidents',
                'ordering': ['-date_time_incident'],
            },
        ),
        migrations.CreateModel(
            name='DropdownConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(help_text="Configuration category (e.g., 'transport_regions', 'wilayas')", max_length=50)),
                ('value', models.CharField(help_text='Display value for dropdown option', max_length=200)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this option is available for selection')),
                ('sort_order', models.IntegerField(default=0, help_text='Display order (lower numbers appear first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Dropdown Configuration',
                'verbose_name_plural': 'Dropdown Configurations',
                'ordering': ['category', 'sort_order', 'value'],
                'unique_together': {('category', 'value')},
            },
        ),
        migrations.CreateModel(
            name='FileAccessNetworkIncident',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_time_incident', models.DateTimeField(help_text='When the incident occurred', verbose_name='Date and time of INCIDENT')),
                ('date_time_recovery', models.DateTimeField(blank=True, help_text='When the incident was resolved (leave empty for active incidents)', null=True, verbose_name='Date and time of RECOVERY')),
                ('duration_minutes', models.IntegerField(blank=True, help_text='Duration in minutes (auto-calculated)', null=True)),
                ('cause', models.CharField(blank=True, help_text='Root cause of the incident', max_length=100, null=True)),
                ('cause_other', models.CharField(blank=True, help_text="Other cause description (if cause is 'Other')", max_length=200, null=True)),
                ('origin', models.CharField(blank=True, help_text='Origin/source of the incident', max_length=100, null=True)),
                ('origin_other', models.CharField(blank=True, help_text="Other origin description (if origin is 'Other')", max_length=200, null=True)),
                ('impact_comment', models.TextField(blank=True, help_text='Detailed description of impact and comments', null=True, verbose_name='IMPACT / COMMENT')),
                ('is_resolved', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('correction_required', models.BooleanField(default=False)),
                ('correction_note', models.TextField(blank=True, help_text='Note explaining why correction is needed (for admin review)', null=True)),
                ('do_wilaya', models.CharField(help_text='Select wilaya from admin-configured list', max_length=50, verbose_name='DO / WILAYA')),
                ('zone_metro', models.CharField(help_text='Zone or metro area identification', max_length=100, verbose_name='ZONE / METRO')),
                ('site', models.CharField(help_text='Site identification', max_length=100, verbose_name='SITE')),
                ('ip_address', models.GenericIPAddressField(help_text='IPv4 or IPv6 address', validators=[incidents.models.validate_ip_address], verbose_name='IP Address')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='file_access_incidents_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='file_access_incidents_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'File Access Network Incident',
                'verbose_name_plural': 'File Access Network Incidents',
                'ordering': ['-date_time_incident'],
            },
        ),
        migrations.CreateModel(
            name='RadioAccessNetworkIncident',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_time_incident', models.DateTimeField(help_text='When the incident occurred', verbose_name='Date and time of INCIDENT')),
                ('date_time_recovery', models.DateTimeField(blank=True, help_text='When the incident was resolved (leave empty for active incidents)', null=True, verbose_name='Date and time of RECOVERY')),
                ('duration_minutes', models.IntegerField(blank=True, help_text='Duration in minutes (auto-calculated)', null=True)),
                ('cause', models.CharField(blank=True, help_text='Root cause of the incident', max_length=100, null=True)),
                ('cause_other', models.CharField(blank=True, help_text="Other cause description (if cause is 'Other')", max_length=200, null=True)),
                ('origin', models.CharField(blank=True, help_text='Origin/source of the incident', max_length=100, null=True)),
                ('origin_other', models.CharField(blank=True, help_text="Other origin description (if origin is 'Other')", max_length=200, null=True)),
                ('impact_comment', models.TextField(blank=True, help_text='Detailed description of impact and comments', null=True, verbose_name='IMPACT / COMMENT')),
                ('is_resolved', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('correction_required', models.BooleanField(default=False)),
                ('correction_note', models.TextField(blank=True, help_text='Note explaining why correction is needed (for admin review)', null=True)),
                ('do_wilaya', models.CharField(help_text='Select wilaya from admin-configured list', max_length=50, verbose_name='DO / WILAYA')),
                ('site', models.CharField(help_text='Radio site identification', max_length=100, verbose_name='SITE')),
                ('ip_address', models.GenericIPAddressField(help_text='IPv4 or IPv6 address', validators=[incidents.models.validate_ip_address], verbose_name='IP ADDRESS')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='radio_access_incidents_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='radio_access_incidents_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Radio Access Network Incident',
                'verbose_name_plural': 'Radio Access Network Incidents',
                'ordering': ['-date_time_incident'],
            },
        ),
        migrations.CreateModel(
            name='TransportNetworkIncident',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_time_incident', models.DateTimeField(help_text='When the incident occurred', verbose_name='Date and time of INCIDENT')),
                ('date_time_recovery', models.DateTimeField(blank=True, help_text='When the incident was resolved (leave empty for active incidents)', null=True, verbose_name='Date and time of RECOVERY')),
                ('duration_minutes', models.IntegerField(blank=True, help_text='Duration in minutes (auto-calculated)', null=True)),
                ('cause', models.CharField(blank=True, help_text='Root cause of the incident', max_length=100, null=True)),
                ('cause_other', models.CharField(blank=True, help_text="Other cause description (if cause is 'Other')", max_length=200, null=True)),
                ('origin', models.CharField(blank=True, help_text='Origin/source of the incident', max_length=100, null=True)),
                ('origin_other', models.CharField(blank=True, help_text="Other origin description (if origin is 'Other')", max_length=200, null=True)),
                ('impact_comment', models.TextField(blank=True, help_text='Detailed description of impact and comments', null=True, verbose_name='IMPACT / COMMENT')),
                ('is_resolved', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('correction_required', models.BooleanField(default=False)),
                ('correction_note', models.TextField(blank=True, help_text='Note explaining why correction is needed (for admin review)', null=True)),
                ('region_loop', models.CharField(help_text='Select region or loop from admin-configured list', max_length=100, verbose_name='REGION / LOOP')),
                ('system_capacity', models.CharField(help_text='Select system or capacity from admin-configured list', max_length=100, verbose_name='SYSTEM / CAPACITY')),
                ('dot_extremity_a', models.CharField(blank=True, help_text='DOT state for extremity A', max_length=50, null=True, verbose_name='DOT EXTREMITY(A)')),
                ('extremity_a', models.CharField(help_text='Location description for extremity A', max_length=200, verbose_name='EXTREMITY(A)')),
                ('dot_extremity_b', models.CharField(help_text='DOT state for extremity B', max_length=50, verbose_name='DOT EXTREMITY(B)')),
                ('extremity_b', models.CharField(help_text='Location description for extremity B', max_length=200, verbose_name='EXTREMITY(B)')),
                ('responsibility', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('Both', 'Both')], help_text='Responsibility assignment (optional)', max_length=4, null=True, verbose_name='RESPONSIBILITY')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transport_incidents_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transport_incidents_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transport Network Incident',
                'verbose_name_plural': 'Transport Network Incidents',
                'ordering': ['-date_time_incident'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('VIEW', 'View'), ('EXPORT', 'Export')], help_text='Type of action performed', max_length=10)),
                ('model_name', models.CharField(help_text='Name of the model affected', max_length=50)),
                ('object_id', models.CharField(blank=True, help_text='ID of the affected object', max_length=255, null=True)),
                ('changes', models.JSONField(blank=True, help_text='JSON representation of changes made', null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the user', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='Browser user agent string', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When the action occurred')),
                ('user', models.ForeignKey(help_text='User who performed the action', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp'], name='incidents_a_timesta_e078b1_idx'), models.Index(fields=['user', 'timestamp'], name='incidents_a_user_id_f9aabe_idx'), models.Index(fields=['model_name', 'timestamp'], name='incidents_a_model_n_616ffc_idx')],
            },
        ),
    ]
